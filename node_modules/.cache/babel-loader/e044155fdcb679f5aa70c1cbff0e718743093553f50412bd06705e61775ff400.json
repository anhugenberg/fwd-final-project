{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anhug\\\\Desktop\\\\CUBoulder\\\\fwd-final-project\\\\src\\\\components\\\\Word.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Word = _ref => {\n  let {\n    selectedWord,\n    correctLetters\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word\",\n    children: selectedWord.split('').map((letter, i) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"letter\",\n        children: correctLetters.includes(letter) ? letter : ''\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = Word;\nexport default Word;\nvar _c;\n$RefreshReg$(_c, \"Word\");","map":{"version":3,"names":["React","Word","selectedWord","correctLetters","split","map","letter","i","includes"],"sources":["C:/Users/anhug/Desktop/CUBoulder/fwd-final-project/src/components/Word.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst  Word = ({ selectedWord, correctLetters }) => {\r\n    return(\r\n        <div className=\"word\">\r\n            {selectedWord.split('').map( (letter, i) => {\r\n                return (\r\n                    <span className=\"letter\" key={i}>\r\n                        {correctLetters.includes(letter) ? letter : ''}\r\n                    </span>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Word;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAOC,IAAI,GAAG,QAAsC;EAAA,IAArC;IAAEC,YAAY;IAAEC;EAAe,CAAC;EAC3C,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,UAChBD,YAAY,CAACE,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAE,CAACC,MAAM,EAAEC,CAAC,KAAK;MACxC,oBACI;QAAM,SAAS,EAAC,QAAQ;QAAA,UACnBJ,cAAc,CAACK,QAAQ,CAACF,MAAM,CAAC,GAAGA,MAAM,GAAG;MAAE,GADpBC,CAAC;QAAA;QAAA;QAAA;MAAA,QAExB;IAEf,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,KAZMN,IAAI;AAcX,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}